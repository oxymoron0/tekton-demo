apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: build-push-image
  namespace: tekton-pipelines
spec:
  volumes:
    - name: docker-config
      secret:
        secretName: docker-credentials
        items:
          - key: .dockerconfigjson
            path: config.json
  params:
    - name: IMAGE # Dockerfile 경로
      type: string
      description: Name of the image to build and push
    - name: DOCKERFILE
      type: string
      default: ./Dockerfile
      description: Path to the Dockerfile
    - name: CONTEXT # 빌드 시 참조 할 파일의 Root Dir
      type: string
      default: .
      description: Build context
    - name: TAG # Build 된 Dockerfile의 TAG
      type: string
      description: Image tag
  workspaces:
    - name: source
      description: The workspace containing the source code
    - name: dockerconfig
      description: Docker config for registry authentication
      optional: true
  results:
    - name: IMAGE_DIGEST
      description: Digest of the image just built
    - name: IMAGE_URL
      description: Full image URL with tag
  steps:
    - name: build-and-push
      image: gcr.io/kaniko-project/executor:latest
      workingDir: $(workspaces.source.path)
      volumeMounts:
        - name: docker-config
          mountPath: /kaniko/.docker
      args:
        - --dockerfile=$(params.DOCKERFILE)
        - --context=$(workspaces.source.path)/$(params.CONTEXT)
        - --destination=$(params.IMAGE):$(params.TAG)
        - --destination=$(params.IMAGE):latest
        - --cache=true
        - --cache-ttl=24h
        - --digest-file=$(results.IMAGE_DIGEST.path)
      securityContext:
        runAsUser: 0
    - name: write-url
      image: bash:5.1
      script: |
        #!/usr/bin/env bash
        set -e
        echo -n "$(params.IMAGE):$(params.TAG)" > $(results.IMAGE_URL.path)